{"ast":null,"code":"var _jsxFileName = \"C:\\\\greenwich\\\\COMP_WEB\\\\comp_web\\\\front_end\\\\src\\\\screens\\\\login.js\",\n  _s = $RefreshSig$();\nimport { connect } from \"react-redux\";\nimport { LockClosedIcon } from \"@heroicons/react/solid\";\nimport { useForm } from \"react-hook-form\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { login } from '../store/actions/authenticateAction';\nimport Form from \"../components/form\";\nimport InputField from \"../components/inputField\";\nimport Password from \"../components/password\";\nimport Button from \"../components/button\";\nimport { ErrorMessage } from \"@hookform/error-message\";\nimport ErrorMessageCustom from \"../components/errorMessage\";\nimport logo from '../assets/logo.png';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst loginFormValidationSchema = yup.object({\n  username: yup.string().required(\"Username must be filled\"),\n  password: yup.string().required(\"Password must be filled\")\n});\nconst LoginPage = ({\n  submitLoginForm\n}) => {\n  _s();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(loginFormValidationSchema)\n  });\n  const onSubmit = formData => {\n    submitLoginForm(formData);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `relative z-10 bg-cover min-h-screen flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-lg w-screen space-y-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"mx-auto h-20 w-auto animate-bounce\",\n            src: logo,\n            alt: \"Workflow\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"mt-6 text-center text-3xl font-extrabold text-white\",\n            children: \"Sign in to your account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full\",\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(InputField, {\n              ...register(\"username\"),\n              type: \"text\",\n              placeholder: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              errors: errors,\n              name: \"username\",\n              render: ({\n                message\n              }) => /*#__PURE__*/_jsxDEV(ErrorMessageCustom, {\n                message: message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Password, {\n              ...register(\"password\"),\n              placeholder: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              errors: errors,\n              name: \"password\",\n              render: ({\n                message\n              }) => /*#__PURE__*/_jsxDEV(ErrorMessageCustom, {\n                message: message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: handleSubmit(onSubmit),\n                role: \"submit\",\n                type: \"primary\",\n                title: \"Login\",\n                icon: LockClosedIcon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(LoginPage, \"RcUlyA4GEHKh2CRkv6V7TGIZ2pY=\", false, function () {\n  return [useForm];\n});\n_c = LoginPage;\nconst mapDispatchToProps = dispatch => {\n  return {\n    submitLoginForm: formData => dispatch(login(formData))\n  };\n};\nexport default connect(null, mapDispatchToProps)(LoginPage);\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["connect","LockClosedIcon","useForm","yup","yupResolver","login","Form","InputField","Password","Button","ErrorMessage","ErrorMessageCustom","logo","jsxDEV","_jsxDEV","Fragment","_Fragment","loginFormValidationSchema","object","username","string","required","password","LoginPage","submitLoginForm","_s","register","handleSubmit","formState","errors","resolver","onSubmit","formData","children","className","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","name","render","message","onClick","role","title","icon","_c","mapDispatchToProps","dispatch","$RefreshReg$"],"sources":["C:/greenwich/COMP_WEB/comp_web/front_end/src/screens/login.js"],"sourcesContent":["import { connect } from \"react-redux\";\r\n\r\nimport { LockClosedIcon } from \"@heroicons/react/solid\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport * as yup from \"yup\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport {login} from '../store/actions/authenticateAction';\r\nimport Form from \"../components/form\";\r\nimport InputField from \"../components/inputField\";\r\nimport Password from \"../components/password\";\r\nimport Button from \"../components/button\";\r\nimport { ErrorMessage } from \"@hookform/error-message\";\r\nimport ErrorMessageCustom from \"../components/errorMessage\";\r\nimport logo from '../assets/logo.png';\r\n\r\nconst loginFormValidationSchema = yup.object({\r\n  username: yup.string().required(\"Username must be filled\"),\r\n  password: yup.string().required(\"Password must be filled\"),\r\n});\r\n\r\nconst LoginPage = ({ submitLoginForm }) => {\r\n  \r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm({\r\n    resolver: yupResolver(loginFormValidationSchema),\r\n  });\r\n\r\n\r\n  const onSubmit = (formData) => {\r\n    submitLoginForm(formData)\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className={`relative z-10 bg-cover min-h-screen flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8`}\r\n      >\r\n        <div className=\"max-w-lg w-screen space-y-8\">\r\n          <div>\r\n            <img\r\n              className=\"mx-auto h-20 w-auto animate-bounce\"\r\n              src={logo}\r\n              alt=\"Workflow\"\r\n            />\r\n            <h2 className=\"mt-6 text-center text-3xl font-extrabold text-white\">\r\n              Sign in to your account\r\n            </h2>\r\n          </div>\r\n          <div className=\"w-full\">\r\n            <Form>\r\n              <InputField\r\n                {...register(\"username\")}\r\n                type=\"text\"\r\n                placeholder=\"Username\"\r\n              />\r\n              <ErrorMessage\r\n                errors={errors}\r\n                name=\"username\"\r\n                render={({ message }) => (\r\n                  <ErrorMessageCustom message={message} />\r\n                )}\r\n              />\r\n              <Password {...register(\"password\")} placeholder=\"Password\" />\r\n              <ErrorMessage\r\n                errors={errors}\r\n                name=\"password\"\r\n                render={({ message }) => (\r\n                  <ErrorMessageCustom message={message} />\r\n                )}\r\n              />\r\n\r\n              {/* <div className=\"w-full flex items-center justify-between\">\r\n                <div className=\"flex items-center\">\r\n                  <input\r\n                    id=\"remember-me\"\r\n                    name=\"remember-me\"\r\n                    type=\"checkbox\"\r\n                    className=\"h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded\"\r\n                  />\r\n                  <label\r\n                    htmlFor=\"remember-me\"\r\n                    className=\"ml-2 block text-sm text-gray-900\"\r\n                  >\r\n                    Remember me\r\n                  </label>\r\n                </div>\r\n\r\n                <div className=\"text-sm\">\r\n                  <a\r\n                    href=\"https://github.com\"\r\n                    className=\"font-medium text-indigo-600 hover:text-indigo-500\"\r\n                  >\r\n                    Forgot your password?\r\n                  </a>\r\n                </div>\r\n              </div> */}\r\n\r\n              <div>\r\n                <Button\r\n                  onClick={handleSubmit(onSubmit)}\r\n                  role=\"submit\"\r\n                  type=\"primary\"\r\n                  title=\"Login\"\r\n                  icon={LockClosedIcon}\r\n                ></Button>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    submitLoginForm: (formData) => dispatch(login(formData))\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(LoginPage);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}